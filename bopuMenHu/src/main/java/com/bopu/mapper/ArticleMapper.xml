<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bopu.mapper.ArticleMapper">
    <resultMap id="BaseResultMap" type="com.bopu.pojo.Article">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="title" jdbcType="VARCHAR" property="title"/>
        <result column="time" jdbcType="TIMESTAMP" property="time"/>
        <result column="count" jdbcType="INTEGER" property="count"/>
        <result column="author" jdbcType="VARCHAR" property="author"/>
        <result column="type" jdbcType="INTEGER" property="type"/>
        <result column="flag" jdbcType="INTEGER" property="flag"/>
        <result column="limitData" jdbcType="TIMESTAMP" property="limitdata"/>
        <result column="look" jdbcType="VARCHAR" property="look"/>
        <result column="referenced" jdbcType="INTEGER" property="referenced"/>
    </resultMap>
    <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.bopu.pojo.Article">
        <result column="content" jdbcType="LONGVARCHAR" property="content"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, title, time, count, author, type, flag, limitData, look, referenced
  </sql>
    <sql id="Blob_Column_List">
    content
  </sql>
    <select id="selectByExampleWithBLOBs" parameterType="com.bopu.pojo.ArticleExample" resultMap="ResultMapWithBLOBs">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from article
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByExample" parameterType="com.bopu.pojo.ArticleExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from article
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from article
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from article
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="com.bopu.pojo.ArticleExample">
        delete from article
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.bopu.pojo.Article">
    insert into article (id, title, time,
      count, author, type,
      flag, limitData, look,
      referenced, content)
    values (#{id,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{time,jdbcType=TIMESTAMP},
      #{count,jdbcType=INTEGER}, #{author,jdbcType=VARCHAR}, #{type,jdbcType=INTEGER},
      #{flag,jdbcType=INTEGER}, #{limitdata,jdbcType=TIMESTAMP}, #{look,jdbcType=VARCHAR},
      #{referenced,jdbcType=INTEGER}, #{content,jdbcType=LONGVARCHAR})
  </insert>
    <insert id="insertSelective" parameterType="com.bopu.pojo.Article">
        insert into article
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="title != null">
                title,
            </if>
            <if test="time != null">
                time,
            </if>
            <if test="count != null">
                count,
            </if>
            <if test="author != null">
                author,
            </if>
            <if test="type != null">
                type,
            </if>
            <if test="flag != null">
                flag,
            </if>
            <if test="limitdata != null">
                limitData,
            </if>
            <if test="look != null">
                look,
            </if>
            <if test="referenced != null">
                referenced,
            </if>
            <if test="content != null">
                content,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="title != null">
                #{title,jdbcType=VARCHAR},
            </if>
            <if test="time != null">
                #{time,jdbcType=TIMESTAMP},
            </if>
            <if test="count != null">
                #{count,jdbcType=INTEGER},
            </if>
            <if test="author != null">
                #{author,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                #{type,jdbcType=INTEGER},
            </if>
            <if test="flag != null">
                #{flag,jdbcType=INTEGER},
            </if>
            <if test="limitdata != null">
                #{limitdata,jdbcType=TIMESTAMP},
            </if>
            <if test="look != null">
                #{look,jdbcType=VARCHAR},
            </if>
            <if test="referenced != null">
                #{referenced,jdbcType=INTEGER},
            </if>
            <if test="content != null">
                #{content,jdbcType=LONGVARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.bopu.pojo.ArticleExample" resultType="java.lang.Long">
        select count(*) from article
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update article
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.title != null">
                title = #{record.title,jdbcType=VARCHAR},
            </if>
            <if test="record.time != null">
                time = #{record.time,jdbcType=TIMESTAMP},
            </if>
            <if test="record.count != null">
                count = #{record.count,jdbcType=INTEGER},
            </if>
            <if test="record.author != null">
                author = #{record.author,jdbcType=VARCHAR},
            </if>
            <if test="record.type != null">
                type = #{record.type,jdbcType=INTEGER},
            </if>
            <if test="record.flag != null">
                flag = #{record.flag,jdbcType=INTEGER},
            </if>
            <if test="record.limitdata != null">
                limitData = #{record.limitdata,jdbcType=TIMESTAMP},
            </if>
            <if test="record.look != null">
                look = #{record.look,jdbcType=VARCHAR},
            </if>
            <if test="record.referenced != null">
                referenced = #{record.referenced,jdbcType=INTEGER},
            </if>
            <if test="record.content != null">
                content = #{record.content,jdbcType=LONGVARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExampleWithBLOBs" parameterType="map">
        update article
        set id = #{record.id,jdbcType=INTEGER},
        title = #{record.title,jdbcType=VARCHAR},
        time = #{record.time,jdbcType=TIMESTAMP},
        count = #{record.count,jdbcType=INTEGER},
        author = #{record.author,jdbcType=VARCHAR},
        type = #{record.type,jdbcType=INTEGER},
        flag = #{record.flag,jdbcType=INTEGER},
        limitData = #{record.limitdata,jdbcType=TIMESTAMP},
        look = #{record.look,jdbcType=VARCHAR},
        referenced = #{record.referenced,jdbcType=INTEGER},
        content = #{record.content,jdbcType=LONGVARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update article
        set id = #{record.id,jdbcType=INTEGER},
        title = #{record.title,jdbcType=VARCHAR},
        time = #{record.time,jdbcType=TIMESTAMP},
        count = #{record.count,jdbcType=INTEGER},
        author = #{record.author,jdbcType=VARCHAR},
        type = #{record.type,jdbcType=INTEGER},
        flag = #{record.flag,jdbcType=INTEGER},
        limitData = #{record.limitdata,jdbcType=TIMESTAMP},
        look = #{record.look,jdbcType=VARCHAR},
        referenced = #{record.referenced,jdbcType=INTEGER}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.bopu.pojo.Article">
        update article
        <set>
            <if test="title != null">
                title = #{title,jdbcType=VARCHAR},
            </if>
            <if test="time != null">
                time = #{time,jdbcType=TIMESTAMP},
            </if>
            <if test="count != null">
                count = #{count,jdbcType=INTEGER},
            </if>
            <if test="author != null">
                author = #{author,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                type = #{type,jdbcType=INTEGER},
            </if>
            <if test="flag != null">
                flag = #{flag,jdbcType=INTEGER},
            </if>
            <if test="limitdata != null">
                limitData = #{limitdata,jdbcType=TIMESTAMP},
            </if>
            <if test="look != null">
                look = #{look,jdbcType=VARCHAR},
            </if>
            <if test="referenced != null">
                referenced = #{referenced,jdbcType=INTEGER},
            </if>
            <if test="content != null">
                content = #{content,jdbcType=LONGVARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.bopu.pojo.Article">
    update article
    set title = #{title,jdbcType=VARCHAR},
      time = #{time,jdbcType=TIMESTAMP},
      count = #{count,jdbcType=INTEGER},
      author = #{author,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      flag = #{flag,jdbcType=INTEGER},
      limitData = #{limitdata,jdbcType=TIMESTAMP},
      look = #{look,jdbcType=VARCHAR},
      referenced = #{referenced,jdbcType=INTEGER},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
    <update id="updateByPrimaryKey" parameterType="com.bopu.pojo.Article">
    update article
    set title = #{title,jdbcType=VARCHAR},
      time = #{time,jdbcType=TIMESTAMP},
      count = #{count,jdbcType=INTEGER},
      author = #{author,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      flag = #{flag,jdbcType=INTEGER},
      limitData = #{limitdata,jdbcType=TIMESTAMP},
      look = #{look,jdbcType=VARCHAR},
      content = #{content}
      referenced = #{referenced,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
    <!-- 手动添加 -->
    <insert id="testInsert" parameterType="com.bopu.pojo.Article">
        insert into article (title,
      content)
    values (#{title,jdbcType=VARCHAR},
      #{content,jdbcType=LONGVARCHAR})
    </insert>

    <select id="testSelectByPrimaryKey" parameterType="java.lang.Integer" resultType="com.bopu.pojo.Article">
        select title,content
        from article
        where id =  #{id,jdbcType=INTEGER}
    </select>
    <!-- 文章查看次数加一 -->
    <update id="updateArticleCount" parameterType="java.lang.Integer">
        update article
        set count = count+1
        where id = #{id,jdbcType=INTEGER}
    </update>
    <!-- 分页查询所有文章 -->
    <select id="findAllArticlePage" parameterType="com.bopu.utils.PageBean" resultType="com.bopu.pojo.Article">
        select *
        from article
        <where>
            <if test="type != null">
                type in
                <foreach collection="type" item="i" close=")" open="(" separator=",">
                    #{i}
                </foreach>
            </if>
        </where>
        order by id
        desc
        limit ${(currentPage-1) * pageSize},${pageSize};
    </select>

    <select id="countByCondition" parameterType="java.util.List" resultType="java.lang.Integer">
        select count(*) from article
        <where>
            <if test="type != null">
                type in
                <foreach collection="type" item="i" close=")" open="(" separator=",">
                    #{i}
                </foreach>
            </if>
        </where>
    </select>
    <select id="selectTitleAndId" parameterType="java.lang.Integer" resultType="com.bopu.pojo.Article">
        select title,id
        from article
        <where>
            <if test="type != null">
                type in
                <foreach collection="type" item="i" close=")" open="(" separator=",">
                    #{i}
                </foreach>
            </if>
        </where>
        order by id desc
        limit 0,8
    </select>
    <select id="getTitleById" parameterType="java.lang.Integer" resultType="java.lang.String">
        select title
        from article
        where id = #{id,jdbcType=INTEGER}
    </select>
    <update id="updateRefByPK" parameterType="java.lang.Integer">
      update article
      set referenced = #{referenced,jdbcType=INTEGER}
      where id =  #{id,jdbcType=INTEGER}
    </update>
</mapper>